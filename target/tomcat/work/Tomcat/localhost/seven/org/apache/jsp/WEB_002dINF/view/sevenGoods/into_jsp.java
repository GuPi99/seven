/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-02-17 18:10:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.sevenGoods;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class into_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta name=\"robots\" content=\"noindex, nofollow\">\r\n");
      out.write("\t\t<meta charset=\"utf-8\">\r\n");
      out.write("\t\t<link rel=\"shortcut icon\" href=\"../../static/img/favicon.ico\" />\r\n");
      out.write("\t\t<title>SIMCO订单管理系统</title>\r\n");
      out.write("\t\t<meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("\t\t<!-- 图标文件引入 -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"http://at.alicdn.com/t/font_1242623_rd4735gfmt.css\" />\r\n");
      out.write("\t\t<!-- css公共样式文件 -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/css/common/common.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/css/common/page.css\" />\r\n");
      out.write("\t\t<!-- layui框架css文件 -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/common/layui/css/layui.css\" />\r\n");
      out.write("\t\t<!-- 表单公共样式文件 -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/css/form/staff.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/css/form/form.css\" />\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\thtml,\r\n");
      out.write("\t\t\tbody {\r\n");
      out.write("\t\t\t\tbackground-color: #fff;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t#app {\r\n");
      out.write("\t\t\t\tpadding: 15px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.layui-form-item {\r\n");
      out.write("\t\t\t\tposition: relative;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.layui-form-item .zyc_verify {\r\n");
      out.write("\t\t\t\tposition: absolute;\r\n");
      out.write("\t\t\t\ttop: 0;\r\n");
      out.write("\t\t\t\tleft: 320px;\r\n");
      out.write("\t\t\t\tfont-size: 13px;\r\n");
      out.write("\t\t\t\tline-height: 30px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.layui-form-checkbox i {\r\n");
      out.write("\t\t\t\theight: 30px !important;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t\t<div id=\"app\">\r\n");
      out.write("\t\t\t<ul class=\"layui-timeline\">\r\n");
      out.write("\t\t\t\t<li class=\"layui-timeline-item\">\r\n");
      out.write("\t\t\t\t\t<i class=\"layui-icon layui-timeline-axis\">&#xe63f;</i>\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-timeline-content layui-text\">\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"layui-timeline-title\">格式</h3>\r\n");
      out.write("\t\t\t\t\t\t<p>请<a download=\"产品\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/excel/goods.xlsx\">下载</a>对应格式Excel，进行批量导入</p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t\t<li class=\"layui-timeline-item\">\r\n");
      out.write("\t\t\t\t\t<i class=\"layui-icon layui-timeline-axis\">&#xe63f;</i>\r\n");
      out.write("\t\t\t\t\t<div class=\"layui-timeline-content layui-text\">\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"layui-timeline-title\">导入</h3>\r\n");
      out.write("\t\t\t\t\t\t<p><input type=\"file\" id=\"zyc_into\" /></p>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- jquery文件 -->\r\n");
      out.write("\t\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/common/jquery.min.js\"></script>\r\n");
      out.write("\t\t<!-- layui框架js文件 -->\r\n");
      out.write("\t\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/common/layui/layui.all.js\"></script>\r\n");
      out.write("\t\t<!-- excel导入js文件 -->\r\n");
      out.write("\t\t<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/common/xlsx.core.min.js\"></script>\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\tvar SCOPE = {\r\n");
      out.write("\t\t\t\t'operate': '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/sevenGoods/batchAddition',\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tlayui.use(['form', 'laydate'], function() {\r\n");
      out.write("\t\t\t\tvar form = layui.form,\r\n");
      out.write("\t\t\t\t\tlaydate = layui.laydate;\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t//导入Excel\r\n");
      out.write("\t\t\t$('#zyc_into').change(function(e) {\r\n");
      out.write("\t\t\t\tvar that = $(this);\r\n");
      out.write("\t\t\t\tvar files = e.target.files;\r\n");
      out.write("\t\t\t\tvar fileReader = new FileReader();\r\n");
      out.write("\t\t\t\tfileReader.onload = function(ev) {\r\n");
      out.write("\t\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\t\tvar data = ev.target.result\r\n");
      out.write("\t\t\t\t\t\tvar workbook = XLSX.read(data, {\r\n");
      out.write("\t\t\t\t\t\t\ttype: 'binary'\r\n");
      out.write("\t\t\t\t\t\t}); // 以二进制流方式读取得到整份excel表格对象\r\n");
      out.write("\t\t\t\t\t\tvar rooms = []; // 存储获取到的数据\r\n");
      out.write("\t\t\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\t\t\tlayer.msg('文件类型不正确, 请重新选择文件');\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t// 表格的表格范围，可用于判断表头是否数量是否正确\r\n");
      out.write("\t\t\t\t\tvar fromTo = '';\r\n");
      out.write("\t\t\t\t\t// 遍历每一张sheet并读取内容\r\n");
      out.write("\t\t\t\t\tfor (var sheet in workbook.Sheets) {\r\n");
      out.write("\t\t\t\t\t\tif (workbook.Sheets.hasOwnProperty(sheet)) {\r\n");
      out.write("\t\t\t\t\t\t\tfromTo = workbook.Sheets[sheet]['!ref'];\r\n");
      out.write("\t\t\t\t\t\t\tif (!fromTo) {\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.msg('文件内容为空, 导入失败');\r\n");
      out.write("\t\t\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\trooms = rooms.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n");
      out.write("\t\t\t\t\t\t\t// break; // 如果只取第一张表，就取消注释这行\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\tvar postData = {};\r\n");
      out.write("\t\t\t\t\tpostData['data'] = rooms;\r\n");
      out.write("\t\t\t\t\tconsole.log(postData);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\t\t\t\turl: SCOPE.operate,\r\n");
      out.write("\t\t\t\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\t\t\t\tcontentType : \"application/json;charset=utf-8\",\r\n");
      out.write("\t\t\t\t\t\t//data : postData,\r\n");
      out.write("\t\t\t\t\t\t data: JSON.stringify(postData), \r\n");
      out.write("\t\t\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\t\t\tif (result.status == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar msg = result.msg;\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.msg(msg);\r\n");
      out.write("\t\t\t\t\t\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\twindow.parent.cloae();\r\n");
      out.write("\t\t\t\t\t\t\t\t}, 300)\r\n");
      out.write("\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\tvar msg = result.msg;\r\n");
      out.write("\t\t\t\t\t\t\t\tlayer.msg(msg);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\t// 以二进制方式打开文件\r\n");
      out.write("\t\t\t\tfileReader.readAsBinaryString(files[0]);\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
